---
import ArrowUp from "../../icon/ArrowUp.astro";
import ArrowDown from "../../icon/ArrowDown.astro";
import NestedCheckbox from "./NestedCheckbox.astro";
---

<section class="container">
  <section class="categories">
    <section class="header">
      <div class="title">
        <h2>Categories</h2>
        <ArrowUp></ArrowUp>
      </div>
      <p class="count">None selected</p>
    </section>
    <section class="checkboxes">
      <NestedCheckbox name="Soft drinks" ident="softdrink">
        <NestedCheckbox name="Lemonade" ident="lemonade"></NestedCheckbox>
        <NestedCheckbox name="Cola" ident="cola"></NestedCheckbox>
        <NestedCheckbox name="Juice" ident="juice"></NestedCheckbox>
      </NestedCheckbox>
      <NestedCheckbox name="Alcoholic drinks" ident="alcohol">
        <NestedCheckbox name="Long drinks" ident="long"></NestedCheckbox>
        <NestedCheckbox name="Hard liquor" ident="hardliquor">
          <NestedCheckbox name="Whiskey" ident="whiskey"></NestedCheckbox>
          <NestedCheckbox name="Vodka" ident="vodka"></NestedCheckbox>
          <NestedCheckbox name="Herbal liqour" ident="herbal"></NestedCheckbox>
        </NestedCheckbox>
        <NestedCheckbox name="Cocktail" ident="cocktail"></NestedCheckbox>
      </NestedCheckbox>
    </section>
  </section>
  <section class="filters">
    <section class="header">
      <div class="title">
        <h2>Filters</h2>
        <ArrowDown></ArrowDown>
      </div>
      <p class="count">None selected</p>
    </section>
  </section>
</section>

<script>
  const selectedSuffix = " selected";
  const selectedText = {
    categories: document.querySelector(".categories .header .count")!,
    filters: document.querySelector(".filters .header .count")!
  }
  const checks = updateChecked()
  let checked = updateChecked(":checked")

  function updateChecked(suffix?: string) {
    return {
      categories: document.querySelectorAll(`.categories .checkboxes input[type="checkbox"]${suffix || ''}`)!,
      filters: document.querySelectorAll(`.filters .checkboxes input[type="checkbox"]${suffix || ''}`)!
    }
  }

  function generateSelected(input: number) {
    if (input === 0) {
      return "None" + selectedSuffix
    } else {
      return input + selectedSuffix
    }
  }

  function updateCheckedText() {
    selectedText.categories.innerHTML = generateSelected(checked.categories.length);
    selectedText.filters.innerHTML = generateSelected(checked.filters.length);
  }

  function checkAllChildren(element: Element) {
    if (element.checked) {
      const children = element.parentElement!.parentElement!.querySelectorAll(`.children input[type="checkbox"]`)
      children.forEach((child) => {
        child.checked = true
      })
    }
  }

  function uncheckParents(element: Element) {
    if (!element.checked) {
      const parent = element.closest(".container")!.parentElement!
      const parentBox = parent.closest(".container")!.querySelector(`input[type="checkbox"]`)!
      console.log(parent);
      console.log(parent.closest(".container")!.querySelector(`input[type="checkbox"]`)!);
      if (parent.className !== "checkboxes") {
        parentBox.checked = false;
        uncheckParents(parentBox)
      }
    }
  }

  Object.values(checks).forEach((value) => {
    value.forEach((element) => {
      element.addEventListener("change", () => {
        checkAllChildren(element)
        uncheckParents(element)
        checked = updateChecked(":checked")
        updateCheckedText()
      })
    })
  })

  updateCheckedText()
</script>

<style lang="scss">
  .container {
    z-index: 10;
    background-color: var(--color-001);
    color: var(--color-005);
    display: flex;
    flex-direction: column;
    // box-sizing: border-box;
    // gap: 16px;
    padding: 20px;
    outline: var(--pane-outline) solid var(--color-003);
    overflow-y: scroll;
  }

  .header {
    margin-bottom: .5em;
  }

  .title {
    display: flex;
    justify-content: space-between;
    align-items: center;

    svg {
      height: 30px;
      width: auto;
    }
  }

  // .categories, .filters {
  //   box-sizing: border-box;
  // }

  .checkboxes {
    font-size: 1em;
    * {
      background-color: aqua;
    }
  }
</style>